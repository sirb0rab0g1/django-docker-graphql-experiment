"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

from .modules import *
from .environment import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
base = environ.Path(__file__) - 2
BASE_DIR = base()

from celery.schedules import crontab

ENV = env.str('ENV', default='local')  # noqa

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =  env.str('SECRET_KEY', default='i1(s6dud&*%mke$t=49m6o8itzv@mlo8=zx4hct-i&=$tv9704')

# SECURITY WARNING: don't run with debug tuthis.profilerned on in production!
DEBUG = env.bool('DEBUG', default=True)

# HOSTS = env.list('HOSTS')

ALLOWED_HOSTS =  env.list('ALLOWED_HOSTS', default=['.localhost', '.192.168.0.147', '.199.68.188.231'])

# Application definition

INSTALLED_APPS = INSTALLED_APPS

MIDDLEWARE = MIDDLEWARE

GRAPHQL_JWT = GRAPHQL_JWT

AUTHENTICATION_BACKENDS = AUTHENTICATION_BACKENDS

GRAPHENE = GRAPHENE

GRAPHQL_AUTH = GRAPHQL_AUTH

AUTH_USER_MODEL = 'users.CustomUser'

EMAIL_BACKEND = EMAIL_BACKEND

EMAIL_HOST = EMAIL_HOST

EMAIL_USE_TLS = EMAIL_USE_TLS

EMAIL_PORT = EMAIL_PORT

EMAIL_HOST_USER = env('EMAIL_HOST_USER')

EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

ROOT_URLCONF = 'api.urls'

WSGI_APPLICATION = 'api.wsgi.application'

# DATABASES = DATABASES

# postgres://{user}:{password}@{hostname}:{port}/{database-name}
DATABASES = {
    'default': env.db('DATABASE_URL', default='postgresql://postgres:ismellsomethingfishy@db:5432/postgres')
}

AUTH_PASSWORD_VALIDATORS = AUTH_PASSWORD_VALIDATORS

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

MEDIA_ROOT = base('media')
MEDIA_URL = '/api/media/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/api/static/'
STATIC_ROOT = base('staticfiles')

STATICFILES_DIRS = [
    base('static')
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            base(BASE_DIR, "templates")
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = "api.routing.application"

REDIS_URL = env.str("REDIS_URL", default="redis://redis:6379")  # noqa

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [REDIS_URL], # from docker image named redis
            'symmetric_encryption_keys': [SECRET_KEY],
        },
    },
}

'''
NOTE: FOR CELERY TIME SCHEDULE GO TO LINK BELOW
http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html?highlight=crontab%20#crontab-schedules
'''


CELERY_BROKER_URL = env.str("CELERY_BROKER_URL", default=f"{REDIS_URL}/0")  # noqa
CELERY_RESULT_BACKEND = env.str("CELERY_RESULT_BACKEND", default=f"{REDIS_URL}/0")  # noqa
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

CELERY_BEAT_SCHEDULE = {
    'hello': {
        'task': 'core.tasks.hello',
        # 'schedule': crontab(minute=58, hour='1')  # execute 1:48 am server time. please look for docker time in console
        'schedule': crontab(0, 0, day_of_month='5') # Execute on the 5th day of every month.
    }
}

CELERY_IMPORTS=('core.tasks', )

REST_FRAMEWORK = REST_FRAMEWORK

# JWT_AUTH = JWT_AUTH

CORS_ORIGIN_WHITELIST = [
    'http://199.68.188.231:8000',
    'http://localhost:4200',
    'http://192.168.0.147:8000'
]

CSRF_TRUSTED_ORIGINS = [
    'http://199.68.188.231:8000',
    'http://localhost:4200',
    'http://192.168.0.147:8000'
]

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)
